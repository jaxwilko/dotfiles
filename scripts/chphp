#!/usr/bin/env bash

if [ $(whoami) != 'root' ]; then
    echo "Must be root to run, exiting."
    exit 1;
fi

get_help() {
    echo "-h                  to see this message"
    echo "-i                  to see help on installing php"
    echo "-v [7.0, 7.2, 5.6]  to select a php version"
    exit 0;
}

get_install() {
    echo "Hi,"
    echo "You may want to add a ppa:"
    echo "   sudo add-apt-repository ppa:ondrej/php"
    echo "   sudo apt update"
    echo "If your system complains about a key missing then run:"
    echo "   sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys <key>"
    echo "After this you should be able to run:"
    echo "   sudo apt install php7.0"
    echo "   sudo apt install php7.2"
    echo "And maybe:"
    echo "   sudo apt-get install php7.0-mbstring php7.0-mcrypt php7.0-mysql php7.0-xml"
    echo "   sudo apt-get install php7.2-mbstring php7.2-mysql php7.2-xml"
    echo "If your apache modules have not been installed then run:"
    echo "   sudo apt install libapache2-mod-php7.2"
    echo "   sudo apt install libapache2-mod-php7.1"
    exit 0;
}

set_version() {
    case "${1}" in
        "7.2")
                `a2dismod php5.6 > /dev/null 2>&1`
                `a2dismod php7.0 > /dev/null 2>&1`
                `a2dismod php7.1 > /dev/null 2>&1`
                `a2enmod php7.2 > /dev/null 2>&1`
                `update-alternatives --set php /usr/bin/php7.2 > /dev/null 2>&1`
            ;;
        "7.1")
                `a2dismod php5.6 > /dev/null 2>&1`
                `a2dismod php7.0 > /dev/null 2>&1`
                `a2enmod php7.1 > /dev/null 2>&1`
                `a2dismod php7.2 > /dev/null 2>&1`
                `update-alternatives --set php /usr/bin/php7.1 > /dev/null 2>&1`
            ;;
        "7.0")
                `a2dismod php5.6 > /dev/null 2>&1`
                `a2enmod php7.0 > /dev/null 2>&1`
                `a2dismod php7.1 > /dev/null 2>&1`
                `a2dismod php7.2 > /dev/null 2>&1`
                `update-alternatives --set php /usr/bin/php7.0 > /dev/null 2>&1`
            ;;
        *)
            echo "Sorry, ${1} is not supported."
            exit 0;
            ;;
    esac
 
    echo "php version set to ${1}"
    echo "restarting apache..."
    `service apache2 restart`
    echo "done!"
    exit 1;
}

while getopts ":h:v:i" o; do
    case "${o}" in
        h)
            h=${OPTARG}
                get_help
            ;;
        i)
            i=${OPTARG}
                get_install
            ;;
        v)
            v=${OPTARG}
                echo "setting version ${v}..."
                set_version $v
            ;;
        *)
            get_help
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${v}" ] || [ -z "${h}" ]; then
    get_help
fi


